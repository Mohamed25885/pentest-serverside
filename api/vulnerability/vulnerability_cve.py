from fastapi import APIRouter, Response, Depends
from typing import List
from core.fastapi.dependencies import PermissionDependency, AllowAll
from app.vulnerability.services.vulnerability_cve import VulnerabilityCveService
from app.user.schemas import (
    ExceptionResponseSchema,
)
from api.vulnerability.response.vulnerability_cve import VulnerabilityCveResponse
from api.vulnerability.request import VulnerabilityCveStoreRequest
from fastapi.exceptions import HTTPException
from api.common.response.deleted_response import DeletedResponse
from pydantic import Field
from core.exceptions.common import IDNotFoundException

vulnerability_cve_router = APIRouter()


@vulnerability_cve_router.get(
    "/{service_id}",
    response_model=List[VulnerabilityCveResponse],
    responses={"400": {"model": ExceptionResponseSchema}},
    dependencies=[Depends(PermissionDependency([AllowAll]))],
)
async def index(
    service_id: int
):
    return await VulnerabilityCveService.list_cves(service_id)


@vulnerability_cve_router.post(
    "/{service_id}/store",
    response_model=VulnerabilityCveResponse,
    responses={"400": {"model": ExceptionResponseSchema}},
    dependencies=[Depends(PermissionDependency([AllowAll]))],
)
async def store(vulnerability: VulnerabilityCveStoreRequest, service_id: int):
    return await VulnerabilityCveService.store(vulnerability, service_id)


@vulnerability_cve_router.put(
    "/{id}/update",
    response_model=VulnerabilityCveResponse,
    responses={"400": {"model": ExceptionResponseSchema}},
    dependencies=[Depends(PermissionDependency([AllowAll]))],
)
async def update(vulnerability: VulnerabilityCveStoreRequest, id: int):
    return await VulnerabilityCveService.update(vulnerability, id)


@vulnerability_cve_router.delete(
    "/{id}",
    response_model=DeletedResponse,
    responses={"400": {"model": ExceptionResponseSchema}},
    dependencies=[Depends(PermissionDependency([AllowAll]))],
)
async def delete(id: int):
    
    await VulnerabilityCveService.delete(id)
    
    return DeletedResponse
