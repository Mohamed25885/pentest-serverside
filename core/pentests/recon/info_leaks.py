import requests
import validators
import tldextract

def check_data_leaks(url):

    src_response = requests.get(url)
    vuln = 0
    if src_response.status_code == 200:
        with open('leaks_wordlist.txt', 'r') as keys:
            for key in keys:
                key.strip()
                if key in src_response.text.lower():
                    print(f"There is {key} in client-side source code.")
                    vuln = 1
    domain = tldextract.extract(url).registered_domain
    github = f"https://github.com/search?q=*.{domain}&type=code"
    git_response = requests.get(url)
    if git_response.status_code == 200:
        with open('leaks_wordlist.txt', 'r') as keys:
            for key in keys:
                key.strip()
                if key in git_response.text.lower():
                    print(f"There is {key} in GitHub codes related to it.")
                    vuln = 1

    if not vuln:
        print("No data leaks.")
if __name__ == "__main__":
    while True:
        url = input("Enter the target url? ")
        if validators.url(url):
            print(url)
            check_data_leaks(url)
        else:
            print("Try again with valid URL:")
