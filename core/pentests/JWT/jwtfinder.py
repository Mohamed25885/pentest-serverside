import re
import base64
import json
import tkinter as tk
from tkinter import scrolledtext


def decode_jwt_component(component):

    decoded_component = base64.urlsafe_b64decode(
        component + '=' * (4 - len(component) % 4)).decode('utf-8')
    return json.loads(decoded_component)
    """except json.JSONDecodeError as e:
        print(f"Error decoding JSON: {e}")
        return None """


def find_and_decode_jwt(http_request_text: str) -> dict:
    # Define the regex pattern for JWT
    jwt_pattern = r'^([A-Za-z0-9\-\._~\+\/]+)\.([A-Za-z0-9\-\._~\+\/]+)\.([A-Za-z0-9\-\._~\+\/]+)$'
    return_dict = {"status": False, "messages": {}}

    # Search for JWTs in Cookie
    cookie_match = re.search(r'Cookie:.*?session=([^\s;]+)', http_request_text)
    if cookie_match:
        jwt_match = re.match(jwt_pattern, cookie_match.group(1))
        if jwt_match:

            # Decode and print header and payload
            header, payload, signature = jwt_match.groups()
            decoded_header = decode_jwt_component(header)
            decoded_payload = decode_jwt_component(payload)

            if decoded_header and decoded_payload:
                return_dict["status"] = True
                return_dict["messages"]["Token"] = jwt_match.group(0)
                return_dict["messages"]["Decoded Header"] = json.dumps(
                    decoded_header, indent=2)
                return_dict["messages"]["Decoded Payload"] = json.dumps(
                    decoded_payload, indent=2)

    return return_dict


if __name__ == "__main__":
 
        url = input("Enter the target requet? ")
        print(find_and_decode_jwt(url))