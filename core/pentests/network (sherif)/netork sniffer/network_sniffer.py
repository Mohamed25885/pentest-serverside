import scapy.all as scapy
from scapy.layers import http

# Define the list of protocols you want to capture
protocols = {"http": 80, "smtp": 25, "pop3": 110, "nntp": 119, "ftp": 21, "telnet": 23, "imap": 143}

def sniff_packets(interface):# the argument of interface is the name of network card
    print("----------------------------------")
    print("[+] * Sniffer Has Started... * [+]")
    print("----------------------------------")
    try:
                       #interface    #don't store data captured
        scapy.sniff(iface=interface, store=False, prn=process_packet)#prn if find packets call function process and send the packet to it as argument
    except KeyboardInterrupt:
        print("Sniffing stopped.")

def process_packet(packet):
    if packet.haslayer(scapy.TCP):
        src_port = packet[scapy.TCP].sport
        dst_port = packet[scapy.TCP].dport
        for protocol, port in protocols.items():
            if src_port == port or dst_port == port:
                print(f"Captured {protocol} packet:")
                print(packet.summary())
                
        if packet.haslayer(http.HTTPRequest):
            print("[+] ", packet[http.HTTPRequest].Host + packet[http.HTTPRequest].Path )
            if packet.haslayer(scapy.Raw):  #if there get/post request sent from this host print it
                request= packet[scapy.Raw].load
                print("[+]====>>====>>====>>====>>",request)
                    

if __name__ == "__main__":
    interface = "Wi-Fi"  # Change this to your network interface (e.g., "eth0" for Ethernet)

    print("Sniffing packets for specified protocols...")
    sniff_packets(interface)
