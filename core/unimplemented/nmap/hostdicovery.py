import nmap3
import sys

nmap = nmap3.NmapHostDiscovery()

def extract_live_ips(results):
    if results:
        for ip_address, result in results.items():
            try:
                if result['state']['state'] == 'up':
                    print(f"{ip_address} is up", "\n")
            except:
                pass

try:
    target = str(input("Enter the target: "))    
    switch = int(input("Enter the host discovery method: "))
    threads = int(input("Enter no of threads: "))
    if switch not in [1, 2, 3, 4]:
        print("Try again with valid choice")
        sys.exit(1)

    if threads <= 0:
        print("Invalid number of threads. Please enter a positive integer.")
        sys.exit(1)
    # optional = input("Enter any optional siwthces")
    results = None
    match switch:
        case 1:
            results = nmap.nmap_no_portscan(target, args=f"--max-parallelism {threads}") # ping sweep, disable port scanning
        case 2:
            results = nmap.nmap_arp_discovery(target, args=f"--max-parallelism {threads}") # arp discovery
        case 3:
            results = nmap.nmap_disable_dns(target, args=f"--max-parallelism {threads}") #no DNS resolution
except Exception as e:
    pass
extract_live_ips(results)

