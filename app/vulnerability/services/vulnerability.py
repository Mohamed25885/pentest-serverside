from typing import Optional, List

from sqlalchemy import or_, select, and_

from app.vulnerability.models import Vulnerability
from app.user.schemas.user import LoginResponseSchema
from core.db import Transactional, session
from core.exceptions import (
    PasswordDoesNotMatchException,
    DuplicateEmailOrNicknameException,
    UserNotFoundException,
)
from core.utils.token_helper import TokenHelper
from api.vulnerability.request.vulnerability import VulnerabilityStoreRequest


class VulnerabilityService:
    def __init__(self):
        ...

    @staticmethod
    async def list_vulnerabilities() -> List[Vulnerability]:
        query = select(Vulnerability)

        result = await session.execute(query)
        return result.scalars().all()

    @staticmethod
    async def store(vul: VulnerabilityStoreRequest) -> Vulnerability:
        vul = Vulnerability(service_name=vul.service_name,
                            version=vul.version, is_vulnerable=vul.is_vulnerable)
        session.add(vul)
        await session.commit()
        await session.refresh(vul)
        return vul
